version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - hazelcast-net
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    expose:
      - "9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - hazelcast-net
    
  
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic message --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    networks:
      - hazelcast-net
  
  facade:
    build: ./facade
    ports:
      - "8000:8000"
    env_file:
      - ./facade/.env
    depends_on:
      kafka:
        condition: service_healthy
      messages1:
        condition: service_started
      messages2:
        condition: service_started
      logging1:
        condition: service_started
      logging2:
        condition: service_started
      logging3:
        condition: service_started
    restart: unless-stopped
    networks:
      - hazelcast-net


  messages1:
    build: ./messages
    ports:
      - "8001:8000"
    env_file:
      - ./messages/.env
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hazelcast-net

  messages2:
    build: ./messages
    ports:
      - "8005:8000"
    env_file:
      - ./messages/.env
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hazelcast-net

  logging1:
    build: ./logging
    ports:
      - "8002:8000"
    env_file:
      - ./logging/.env
    networks:
      - hazelcast-net
  
  logging2:
    build: ./logging
    ports:
      - "8003:8000"
    env_file:
      - ./logging/.env
    networks:
      - hazelcast-net

  logging3:
    build: ./logging
    ports:
      - "8004:8000"
    env_file:
      - ./logging/.env
    networks:
      - hazelcast-net
  
  hazelcast-node-1:
    image: hazelcast/hazelcast
    container_name: lab-node-1
    environment:
      - HZ_CLUSTERNAME=lab-micro-hazelcast
    ports:
      - "5701:5701"
    networks:
      - hazelcast-net
  
  hazelcast-node-2:
    image: hazelcast/hazelcast
    container_name: lab-node-2
    environment:
      - HZ_CLUSTERNAME=lab-micro-hazelcast
    ports:
      - "5702:5701"
    networks:
      - hazelcast-net

  hazelcast-node-3:
    image: hazelcast/hazelcast
    container_name: lab-node-3
    environment:
      - HZ_CLUSTERNAME=lab-micro-hazelcast
    ports:
      - "5703:5701"
    networks:
      - hazelcast-net

  hazelcast-management-center:
    image: hazelcast/management-center
    container_name: hazelcast-management-center
    environment:
      - MC_CLUSTER_MEMBERS=hazelcast-node-1:5701,hazelcast-node-2:5701,hazelcast-node-3:5701
      - HZ_CLUSTERNAME=lab-micro-hazelcast
    ports:
      - "8080:8080"
    networks:
      - hazelcast-net

networks:
  hazelcast-net:
    name: hazelcast-network
    driver: bridge
