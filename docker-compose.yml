version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - hazelcast-net
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    expose:
      - "9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - hazelcast-net
    
  
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic message --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    networks:
      - hazelcast-net
  
  consul:
    image: consul
    ports:
      - "8500:8500"
    healthcheck:
      test: [ "CMD", "consul", "members" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - hazelcast-net

  init-consul:
    image: consul
    depends_on:
      consul:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "            
      consul kv put -http-addr=software_architecture_consul_1:8500 hazelcast/cluster_name "lab-micro-hazelcast" 
      consul kv put -http-addr=software_architecture_consul_1:8500 hazelcast/cluster_members "software_architecture_hazelcast-node_3,software_architecture_hazelcast-node_2,software_architecture_hazelcast-node_1"
      consul kv put -http-addr=software_architecture_consul_1:8500 hazelcast/map_name "logging-map"
      consul kv put -http-addr=software_architecture_consul_1:8500 kafka/brokers "kafka:9092"
      consul kv put -http-addr=software_architecture_consul_1:8500 kafka/topic "message"
      consul kv put -http-addr=software_architecture_consul_1:8500 kafka/queue "kafka_queue"
      consul kv put -http-addr=software_architecture_consul_1:8500 kafka/group "my_group"
      "
    networks:
      - hazelcast-net
  
  facade:
    build: ./facade
    ports:
      - "8000:8000"
    depends_on:
      init-consul:
        condition: service_completed_successfully
      init-kafka:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - hazelcast-net


  messages_1:
    ports:
      - "8001:8000"
    build: 
      context: ./messages
    environment:
      SERVICE_NAME: messages_1
    depends_on:
      kafka:
        condition: service_healthy
      init-consul:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - hazelcast-net

  messages_2:
    ports:
      - "8005:8000"
    build: 
      context: ./messages
    environment:
      SERVICE_NAME: messages_2
    depends_on:
      kafka:
        condition: service_healthy
      init-consul:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - hazelcast-net

  logging_1:
    ports:
      - "8004:8000"
    build: 
      context: ./logging
    environment:
      SERVICE_NAME: logging_1
    depends_on:
      init-consul:
        condition: service_completed_successfully
    networks:
      - hazelcast-net

  logging_2:
    ports:
      - "8003:8000"
    build: 
      context: ./logging
    environment:
      SERVICE_NAME: logging_2
    depends_on:
      init-consul:
        condition: service_completed_successfully
    networks:
      - hazelcast-net

  logging_3:
    ports:
      - "8002:8000"
    build: 
      context: ./logging
    environment:
      SERVICE_NAME: logging_3
    depends_on:
      init-consul:
        condition: service_completed_successfully
    networks:
      - hazelcast-net
  
  hazelcast-node:
    image: hazelcast/hazelcast
    environment:
      - HZ_CLUSTERNAME=lab-micro-hazelcast
    deploy:
      replicas: 3
    networks:
      - hazelcast-net

networks:
  hazelcast-net:
    name: hazelcast-network
    driver: bridge
